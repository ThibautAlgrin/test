    /**
{% block phpdoc_method_header %}
     * Get all {{ entity }} entities.
     *
     * @View(serializerEnableMaxDepthChecks=true)
     * @QueryParam(name="offset", requirements="\d+", nullable=true, description="Offset from which to start listing notes.")
     * @QueryParam(name="limit", requirements="\d+", default="20", description="How many notes to return.")
     * @QueryParam(name="order_by", nullable=true, array=true, description="Order by fields. Must be an array ie. &order_by[name]=ASC&order_by[description]=DESC")
     * @ApiDoc(
     *   resource=true,
     *   description="Get all {{ entity }} entities"
     * )
     * ---
     * @param ParamFetcherInterface $paramFetcher
     * @return Response
     *
{% endblock phpdoc_method_header %}
{% block phpdoc_method_annotations %}
{% if 'annotation' == format %}{% endif %}
{% endblock phpdoc_method_annotations %}
     */
{% block method_definition %}
    public function cgetAction(ParamFetcherInterface $paramFetcher)
{% endblock method_definition %}
    {
{% block method_body %}
        $offset = $paramFetcher->get('offset');
        $limit = $paramFetcher->get('limit');
        $order_by = $paramFetcher->get('order_by');

        $em = $this->getDoctrine()->getManager();
        $entities = $em->getRepository('{{ bundle }}:{{ entity }}')->findBy([], $order_by, $limit, $offset);
        if ($entities) {
            return $entities;
        }
        return $this->createNotFoundException();
{% endblock method_body %}
{% block method_return '' %}
    }
{% block form '' %}

